{"version":3,"sources":["utils/config.js","store/postSlice.js","store/userSlice.js","components/Card/Card.js","components/Cards/Cards.js","components/Form/Form.js","components/App/App.js","store/store.js","index.js"],"names":["API","getPosts","createAsyncThunk","_","a","rejectWithValue","fetch","method","headers","response","ok","Error","json","posts","message","postSlice","createSlice","name","initialState","fullPosts","postsStatus","postsError","reducers","concatArr","status","action","newPosts","map","post","Object","assign","payload","find","user","id","searchAuthor","state","filteredPosts","filter","toLowerCase","replace","includes","extraReducers","pending","fulfilled","rejected","actions","getUsers","users","userSlice","usersStatus","usersError","Card","card","className","title","body","Cards","useSelector","console","log","Form","dispatch","useDispatch","useState","value","setValue","onSubmit","e","preventDefault","type","width","height","viewBox","fill","xmlns","fillRule","d","onChange","target","placeholder","App","useEffect","configureStore","reducer","userReduser","postReduser","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.fa78fb59.chunk.js","sourcesContent":["export const API = `https://jsonplaceholder.typicode.com`;\nexport const PATH_POSTS = `/posts`;\nexport const PATH_USERS = `/users`;\nexport const LIMIT = `/?_limit=10`;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { LIMIT, API, PATH_POSTS } from \"../utils/config\";\n\nexport const getPosts = createAsyncThunk(\n  \"post/getPosts\",\n  async function (_, { rejectWithValue }) {\n    try {\n      const response = await fetch(API + PATH_POSTS + LIMIT, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n      });\n      if (!response.ok) {\n        throw new Error(\"SERVER ERROR!\");\n      }\n      const posts = await response.json();\n      return posts;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nconst initialState = {\n  posts: [],\n  fullPosts: [],\n  postsStatus: null,\n  postsError: null,\n};\n\nexport const postSlice = createSlice({\n  name: \"post\",\n  initialState,\n  reducers: {\n    concatArr(status, action) {\n      const newPosts = status.posts.map((post) =>\n        Object.assign(\n          post,\n          action.payload.find((user) => post.id === user.id)\n        )\n      );\n      status.fullPosts = newPosts;\n    },\n    searchAuthor(state, action) {\n      let filteredPosts = [];\n      filteredPosts = state.fullPosts.filter((post) =>\n        post.name\n          .toLowerCase()\n          .replace(/[.,!?%]/g, \"\")\n          .includes(action.payload.toLowerCase())\n      );\n      state.fullPosts = filteredPosts;\n    },\n  },\n  extraReducers: {\n    [getPosts.pending]: (state) => {\n      state.postsStatus = \"loading\";\n      state.postsError = null;\n    },\n    [getPosts.fulfilled]: (state, action) => {\n      state.postsStatus = \"resolved\";\n      state.posts = action.payload;\n    },\n    [getPosts.rejected]: (state, action) => {\n      state.postsStatus = \"rejected\";\n      state.postsError = action.payload;\n    },\n  },\n});\n\nexport const { concatArr, searchAuthor } = postSlice.actions;\n\nexport default postSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { API, PATH_USERS } from \"../utils/config\";\n\nexport const getUsers = createAsyncThunk(\n  \"user/getUsers\",\n  async function (_, { rejectWithValue }) {\n    try {\n      const response = await fetch(API + PATH_USERS, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n      });\n      if (!response.ok) {\n        throw new Error(\"SERVER ERROR!\");\n      }\n      const users = await response.json();\n      return users;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nconst initialState = {\n  users: [],\n  usersStatus: null,\n  usersError: null,\n};\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n  },\n  extraReducers: {\n    [getUsers.pending]: (state) => {\n      state.usersStatus = \"loading\";\n      state.usersError = null;\n    },\n    [getUsers.fulfilled]: (state, action) => {\n      state.usersStatus = \"resolved\";\n      state.users = action.payload;\n    },\n    [getUsers.rejected]: (state, action) => {\n      state.usersStatus = \"rejected\";\n      state.usersError = action.payload;\n    },\n  },\n});\n\nexport const { } = userSlice.actions;\n\nexport default userSlice.reducer;\n","import \"./Card.scss\";\n\nconst Card = (card) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title card__title\">{card.title}</h5>\n        <p className=\"card-text\">{card.body}</p>\n        <p className=\"card-text\">{card.name}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import { useSelector } from \"react-redux\";\nimport Card from \"../Card/Card\";\nimport \"./Cards.scss\";\n\nconst Cards = () => {\n  const { posts, fullPosts } = useSelector((state) => state.post);\n\n  console.log(fullPosts);\n\n  return (\n    <section className=\"cards\">\n      {fullPosts.map((card) => {\n        return <Card key={card.id} {...card} />;\n      })}\n    </section>\n  );\n};\n\nexport default Cards;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { searchAuthor } from \"../../store/postSlice\";\nimport \"./Form.scss\";\n\nconst Form = () => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(searchAuthor(value));\n  }\n\n  return (\n    <form className=\"form\" onSubmit={handleSubmit}>\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend\">\n          <button type=\"submit\" className=\"input-group-text\" id=\"basic-addon1\">\n            <svg\n              width=\"1em\"\n              height=\"1em\"\n              viewBox=\"0 0 16 16\"\n              className=\"bi bi-search\"\n              fill=\"currentColor\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\"\n              />\n              <path\n                fillRule=\"evenodd\"\n                d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\"\n              />\n            </svg>\n          </button>\n        </div>\n        <input\n          type=\"text\"\n          name=\"search\"\n          value={value}\n          onChange={handleChange}\n          className=\"form-control\"\n          placeholder=\"Поиск автора\"\n          aria-label=\"Поиск автора\"\n          aria-describedby=\"basic-addon1\"\n        />\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { concatArr, getPosts } from \"../../store/postSlice\";\nimport { getUsers } from \"../../store/userSlice\";\nimport Cards from \"../Cards/Cards\";\nimport Form from \"../Form/Form\";\nimport \"./App.scss\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const { posts, postsStatus } = useSelector((state) => state.post);\n  const { users, usersStatus } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    dispatch(getPosts());\n    dispatch(getUsers());\n  }, []);\n\n  useEffect(() => {\n    if(postsStatus === `resolved` && usersStatus === `resolved`) {\n      dispatch(concatArr(users));\n    }\n  }, [postsStatus, usersStatus])\n\n  return (\n    <section className=\"app\">\n      <Form />\n      <Cards />\n    </section>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport userReduser from \"./userSlice\";\nimport postReduser from \"./postSlice\";\n\nexport default configureStore({\n  reducer: {\n    user: userReduser,\n    post: postReduser,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/App/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}